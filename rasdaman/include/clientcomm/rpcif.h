/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPCIF.H_H_RPCGEN
#define _RPCIF.H_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef struct {
	u_int confarray_len;
	char *confarray_val;
} confarray;

struct RPCMarray {
	char *domain;
	u_long cellTypeLength;
	u_short currentFormat;
	u_short storageFormat;
	confarray data;
};
typedef struct RPCMarray RPCMarray;

struct RPCClientEntry {
	u_long clientId;
	char *clientIdText;
	char *userName;
	char *baseName;
	u_long creationTime;
	u_long lastActionTime;
	u_long transferColl;
	u_long transferIter;
	u_long assembleMDD;
	u_long transferMDD;
	u_long transTiles;
	u_long tileIter;
	u_long bytesToTransfer;
};
typedef struct RPCClientEntry RPCClientEntry;

struct RPCOIdEntry {
	char *oid;
};
typedef struct RPCOIdEntry RPCOIdEntry;

struct OpenDBParams {
	char *dbName;
	char *userName;
	char *capability;
};
typedef struct OpenDBParams OpenDBParams;

struct OpenDBRes {
	u_short status;
	u_long clientID;
};
typedef struct OpenDBRes OpenDBRes;

struct BeginTAParams {
	u_long clientID;
	u_short readOnly;
	char *capability;
};
typedef struct BeginTAParams BeginTAParams;

struct ExecuteQueryParams {
	u_long clientID;
	char *query;
};
typedef struct ExecuteQueryParams ExecuteQueryParams;

struct ExecuteQueryRes {
	u_short status;
	u_long errorNo;
	u_long lineNo;
	u_long columnNo;
	char *token;
	char *typeName;
	char *typeStructure;
};
typedef struct ExecuteQueryRes ExecuteQueryRes;

struct ExecuteUpdateRes {
	u_short status;
	u_long errorNo;
	u_long lineNo;
	u_long columnNo;
	char *token;
};
typedef struct ExecuteUpdateRes ExecuteUpdateRes;

struct InsertCollParams {
	u_long clientID;
	char *collName;
	char *typeName;
	char *oid;
};
typedef struct InsertCollParams InsertCollParams;

struct NameSpecParams {
	u_long clientID;
	char *name;
};
typedef struct NameSpecParams NameSpecParams;

struct OIdSpecParams {
	u_long clientID;
	char *oid;
};
typedef struct OIdSpecParams OIdSpecParams;

struct RemoveObjFromCollParams {
	u_long clientID;
	char *collName;
	char *oid;
};
typedef struct RemoveObjFromCollParams RemoveObjFromCollParams;

struct GetCollRes {
	u_short status;
	char *typeName;
	char *typeStructure;
	char *oid;
	char *collName;
};
typedef struct GetCollRes GetCollRes;

struct GetCollOIdsRes {
	u_short status;
	char *typeName;
	char *typeStructure;
	char *oid;
	char *collName;
	struct {
		u_int oidTable_len;
		RPCOIdEntry *oidTable_val;
	} oidTable;
};
typedef struct GetCollOIdsRes GetCollOIdsRes;

struct GetMDDRes {
	u_short status;
	char *domain;
	char *typeName;
	char *typeStructure;
	char *oid;
	u_short currentFormat;
};
typedef struct GetMDDRes GetMDDRes;

struct GetTileRes {
	u_short status;
	RPCMarray *marray;
};
typedef struct GetTileRes GetTileRes;

struct OIdRes {
	u_short status;
	char *oid;
};
typedef struct OIdRes OIdRes;

struct ObjectTypeRes {
	u_short status;
	u_short objType;
};
typedef struct ObjectTypeRes ObjectTypeRes;

struct InsertMDDParams {
	u_long clientID;
	char *collName;
	char *typeName;
	char *oid;
	RPCMarray *marray;
};
typedef struct InsertMDDParams InsertMDDParams;

struct InsertTileParams {
	u_long clientID;
	int isPersistent;
	RPCMarray *marray;
};
typedef struct InsertTileParams InsertTileParams;

struct EndInsertMDDParams {
	u_long clientID;
	int isPersistent;
};
typedef struct EndInsertMDDParams EndInsertMDDParams;

struct InsertTransMDDParams {
	u_long clientID;
	char *collName;
	char *domain;
	u_long typeLength;
	char *typeName;
};
typedef struct InsertTransMDDParams InsertTransMDDParams;

struct InsertPersMDDParams {
	u_long clientID;
	char *collName;
	char *domain;
	u_long typeLength;
	char *typeName;
	char *oid;
};
typedef struct InsertPersMDDParams InsertPersMDDParams;

struct NewOIdParams {
	u_long clientID;
	u_short objType;
};
typedef struct NewOIdParams NewOIdParams;

struct ServerStatRes {
	u_short status;
	u_long inactivityTimeout;
	u_long managementInterval;
	u_long transactionActive;
	u_long maxTransferBufferSize;
	u_long nextClientId;
	u_long clientNumber;
	u_long memArena;
	u_long memSmblks;
	u_long memOrdblks;
	u_long memFordblks;
	u_long memUordblks;
	struct {
		u_int clientTable_len;
		RPCClientEntry *clientTable_val;
	} clientTable;
};
typedef struct ServerStatRes ServerStatRes;

struct ServerVersionRes {
	u_short status;
	double serverVersionNo;
	double rpcInterfaceVersionNo;
};
typedef struct ServerVersionRes ServerVersionRes;

struct GetTypeStructureParams {
	u_long clientID;
	char *typeName;
	u_short typeType;
};
typedef struct GetTypeStructureParams GetTypeStructureParams;

struct GetTypeStructureRes {
	u_short status;
	char *typeStructure;
};
typedef struct GetTypeStructureRes GetTypeStructureRes;

struct GetElementRes {
	u_short status;
	confarray data;
};
typedef struct GetElementRes GetElementRes;

struct SetServerTransferParams {
	u_long clientID;
	u_short format;
	char *formatParams;
};
typedef struct SetServerTransferParams SetServerTransferParams;

struct GetExtendedErrorInfo {
	u_short status;
	char *errorText;
};
typedef struct GetExtendedErrorInfo GetExtendedErrorInfo;

#define RPCIF 0x29999999
#define RPCIFVERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define RPCGETSERVERVERSION 1
extern  ServerVersionRes * rpcgetserverversion_1(int *, CLIENT *);
extern  ServerVersionRes * rpcgetserverversion_1_svc(int *, struct svc_req *);
#define RPCSHUTDOWN 2
extern  u_short * rpcshutdown_1(int *, CLIENT *);
extern  u_short * rpcshutdown_1_svc(int *, struct svc_req *);
#define RPCSERVERSTAT 3
extern  ServerStatRes * rpcserverstat_1(int *, CLIENT *);
extern  ServerStatRes * rpcserverstat_1_svc(int *, struct svc_req *);
#define RPCKILLTABLEENTRY 4
extern  u_short * rpckilltableentry_1(u_long *, CLIENT *);
extern  u_short * rpckilltableentry_1_svc(u_long *, struct svc_req *);
#define RPCALIVE 5
extern  u_short * rpcalive_1(u_long *, CLIENT *);
extern  u_short * rpcalive_1_svc(u_long *, struct svc_req *);
#define RPCOPENDB 6
extern  OpenDBRes * rpcopendb_1(OpenDBParams *, CLIENT *);
extern  OpenDBRes * rpcopendb_1_svc(OpenDBParams *, struct svc_req *);
#define RPCCLOSEDB 7
extern  u_short * rpcclosedb_1(u_long *, CLIENT *);
extern  u_short * rpcclosedb_1_svc(u_long *, struct svc_req *);
#define RPCCREATEDB 8
extern  u_short * rpccreatedb_1(char **, CLIENT *);
extern  u_short * rpccreatedb_1_svc(char **, struct svc_req *);
#define RPCDESTROYDB 9
extern  u_short * rpcdestroydb_1(char **, CLIENT *);
extern  u_short * rpcdestroydb_1_svc(char **, struct svc_req *);
#define RPCBEGINTA 10
extern  u_short * rpcbeginta_1(BeginTAParams *, CLIENT *);
extern  u_short * rpcbeginta_1_svc(BeginTAParams *, struct svc_req *);
#define RPCCOMMITTA 11
extern  u_short * rpccommitta_1(u_long *, CLIENT *);
extern  u_short * rpccommitta_1_svc(u_long *, struct svc_req *);
#define RPCABORTTA 12
extern  u_short * rpcabortta_1(u_long *, CLIENT *);
extern  u_short * rpcabortta_1_svc(u_long *, struct svc_req *);
#define RPCEXECUTEQUERY 13
extern  ExecuteQueryRes * rpcexecutequery_1(ExecuteQueryParams *, CLIENT *);
extern  ExecuteQueryRes * rpcexecutequery_1_svc(ExecuteQueryParams *, struct svc_req *);
#define RPCGETNEXTMDD 14
extern  GetMDDRes * rpcgetnextmdd_1(u_long *, CLIENT *);
extern  GetMDDRes * rpcgetnextmdd_1_svc(u_long *, struct svc_req *);
#define RPCGETMDDBYOID 15
extern  GetMDDRes * rpcgetmddbyoid_1(OIdSpecParams *, CLIENT *);
extern  GetMDDRes * rpcgetmddbyoid_1_svc(OIdSpecParams *, struct svc_req *);
#define RPCGETNEXTTILE 16
extern  GetTileRes * rpcgetnexttile_1(u_long *, CLIENT *);
extern  GetTileRes * rpcgetnexttile_1_svc(u_long *, struct svc_req *);
#define RPCENDTRANSFER 17
extern  u_short * rpcendtransfer_1(u_long *, CLIENT *);
extern  u_short * rpcendtransfer_1_svc(u_long *, struct svc_req *);
#define RPCINITEXECUTEUPDATE 18
extern  u_short * rpcinitexecuteupdate_1(u_long *, CLIENT *);
extern  u_short * rpcinitexecuteupdate_1_svc(u_long *, struct svc_req *);
#define RPCEXECUTEUPDATE 19
extern  ExecuteUpdateRes * rpcexecuteupdate_1(ExecuteQueryParams *, CLIENT *);
extern  ExecuteUpdateRes * rpcexecuteupdate_1_svc(ExecuteQueryParams *, struct svc_req *);
#define RPCSTARTINSERTTRANSMDD 20
extern  u_short * rpcstartinserttransmdd_1(InsertTransMDDParams *, CLIENT *);
extern  u_short * rpcstartinserttransmdd_1_svc(InsertTransMDDParams *, struct svc_req *);
#define RPCSTARTINSERTPERSMDD 21
extern  u_short * rpcstartinsertpersmdd_1(InsertPersMDDParams *, CLIENT *);
extern  u_short * rpcstartinsertpersmdd_1_svc(InsertPersMDDParams *, struct svc_req *);
#define RPCINSERTTILE 22
extern  u_short * rpcinserttile_1(InsertTileParams *, CLIENT *);
extern  u_short * rpcinserttile_1_svc(InsertTileParams *, struct svc_req *);
#define RPCENDINSERTMDD 23
extern  u_short * rpcendinsertmdd_1(EndInsertMDDParams *, CLIENT *);
extern  u_short * rpcendinsertmdd_1_svc(EndInsertMDDParams *, struct svc_req *);
#define RPCINSERTMDD 24
extern  u_short * rpcinsertmdd_1(InsertMDDParams *, CLIENT *);
extern  u_short * rpcinsertmdd_1_svc(InsertMDDParams *, struct svc_req *);
#define RPCGETCOLLBYNAME 25
extern  GetCollRes * rpcgetcollbyname_1(NameSpecParams *, CLIENT *);
extern  GetCollRes * rpcgetcollbyname_1_svc(NameSpecParams *, struct svc_req *);
#define RPCGETCOLLBYOID 26
extern  GetCollRes * rpcgetcollbyoid_1(OIdSpecParams *, CLIENT *);
extern  GetCollRes * rpcgetcollbyoid_1_svc(OIdSpecParams *, struct svc_req *);
#define RPCGETCOLLOIDSBYNAME 27
extern  GetCollOIdsRes * rpcgetcolloidsbyname_1(NameSpecParams *, CLIENT *);
extern  GetCollOIdsRes * rpcgetcolloidsbyname_1_svc(NameSpecParams *, struct svc_req *);
#define RPCGETCOLLOIDSBYOID 28
extern  GetCollOIdsRes * rpcgetcolloidsbyoid_1(OIdSpecParams *, CLIENT *);
extern  GetCollOIdsRes * rpcgetcolloidsbyoid_1_svc(OIdSpecParams *, struct svc_req *);
#define RPCINSERTCOLL 29
extern  u_short * rpcinsertcoll_1(InsertCollParams *, CLIENT *);
extern  u_short * rpcinsertcoll_1_svc(InsertCollParams *, struct svc_req *);
#define RPCDELETECOLLBYNAME 30
extern  u_short * rpcdeletecollbyname_1(NameSpecParams *, CLIENT *);
extern  u_short * rpcdeletecollbyname_1_svc(NameSpecParams *, struct svc_req *);
#define RPCDELETEOBJBYOID 31
extern  u_short * rpcdeleteobjbyoid_1(OIdSpecParams *, CLIENT *);
extern  u_short * rpcdeleteobjbyoid_1_svc(OIdSpecParams *, struct svc_req *);
#define RPCREMOVEOBJFROMCOLL 32
extern  u_short * rpcremoveobjfromcoll_1(RemoveObjFromCollParams *, CLIENT *);
extern  u_short * rpcremoveobjfromcoll_1_svc(RemoveObjFromCollParams *, struct svc_req *);
#define RPCGETNEWOID 33
extern  OIdRes * rpcgetnewoid_1(NewOIdParams *, CLIENT *);
extern  OIdRes * rpcgetnewoid_1_svc(NewOIdParams *, struct svc_req *);
#define RPCGETOBJECTTYPE 34
extern  ObjectTypeRes * rpcgetobjecttype_1(OIdSpecParams *, CLIENT *);
extern  ObjectTypeRes * rpcgetobjecttype_1_svc(OIdSpecParams *, struct svc_req *);
#define RPCGETTYPESTRUCTURE 35
extern  GetTypeStructureRes * rpcgettypestructure_1(GetTypeStructureParams *, CLIENT *);
extern  GetTypeStructureRes * rpcgettypestructure_1_svc(GetTypeStructureParams *, struct svc_req *);
#define RPCGETNEXTELEMENT 36
extern  GetElementRes * rpcgetnextelement_1(u_long *, CLIENT *);
extern  GetElementRes * rpcgetnextelement_1_svc(u_long *, struct svc_req *);
#define RPCGETSERVERENDIAN 37
extern  int * rpcgetserverendian_1(int *, CLIENT *);
extern  int * rpcgetserverendian_1_svc(int *, struct svc_req *);
#define RPCSETSERVERTRANSFER 38
extern  u_short * rpcsetservertransfer_1(SetServerTransferParams *, CLIENT *);
extern  u_short * rpcsetservertransfer_1_svc(SetServerTransferParams *, struct svc_req *);
#define RPCGETERRORINFO 39
extern  GetExtendedErrorInfo * rpcgeterrorinfo_1(void *, CLIENT *);
extern  GetExtendedErrorInfo * rpcgeterrorinfo_1_svc(void *, struct svc_req *);
#define RPCSETSERVERSTORAGE 40
extern  u_short * rpcsetserverstorage_1(SetServerTransferParams *, CLIENT *);
extern  u_short * rpcsetserverstorage_1_svc(SetServerTransferParams *, struct svc_req *);
extern int rpcif_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define RPCGETSERVERVERSION 1
extern  ServerVersionRes * rpcgetserverversion_1();
extern  ServerVersionRes * rpcgetserverversion_1_svc();
#define RPCSHUTDOWN 2
extern  u_short * rpcshutdown_1();
extern  u_short * rpcshutdown_1_svc();
#define RPCSERVERSTAT 3
extern  ServerStatRes * rpcserverstat_1();
extern  ServerStatRes * rpcserverstat_1_svc();
#define RPCKILLTABLEENTRY 4
extern  u_short * rpckilltableentry_1();
extern  u_short * rpckilltableentry_1_svc();
#define RPCALIVE 5
extern  u_short * rpcalive_1();
extern  u_short * rpcalive_1_svc();
#define RPCOPENDB 6
extern  OpenDBRes * rpcopendb_1();
extern  OpenDBRes * rpcopendb_1_svc();
#define RPCCLOSEDB 7
extern  u_short * rpcclosedb_1();
extern  u_short * rpcclosedb_1_svc();
#define RPCCREATEDB 8
extern  u_short * rpccreatedb_1();
extern  u_short * rpccreatedb_1_svc();
#define RPCDESTROYDB 9
extern  u_short * rpcdestroydb_1();
extern  u_short * rpcdestroydb_1_svc();
#define RPCBEGINTA 10
extern  u_short * rpcbeginta_1();
extern  u_short * rpcbeginta_1_svc();
#define RPCCOMMITTA 11
extern  u_short * rpccommitta_1();
extern  u_short * rpccommitta_1_svc();
#define RPCABORTTA 12
extern  u_short * rpcabortta_1();
extern  u_short * rpcabortta_1_svc();
#define RPCEXECUTEQUERY 13
extern  ExecuteQueryRes * rpcexecutequery_1();
extern  ExecuteQueryRes * rpcexecutequery_1_svc();
#define RPCGETNEXTMDD 14
extern  GetMDDRes * rpcgetnextmdd_1();
extern  GetMDDRes * rpcgetnextmdd_1_svc();
#define RPCGETMDDBYOID 15
extern  GetMDDRes * rpcgetmddbyoid_1();
extern  GetMDDRes * rpcgetmddbyoid_1_svc();
#define RPCGETNEXTTILE 16
extern  GetTileRes * rpcgetnexttile_1();
extern  GetTileRes * rpcgetnexttile_1_svc();
#define RPCENDTRANSFER 17
extern  u_short * rpcendtransfer_1();
extern  u_short * rpcendtransfer_1_svc();
#define RPCINITEXECUTEUPDATE 18
extern  u_short * rpcinitexecuteupdate_1();
extern  u_short * rpcinitexecuteupdate_1_svc();
#define RPCEXECUTEUPDATE 19
extern  ExecuteUpdateRes * rpcexecuteupdate_1();
extern  ExecuteUpdateRes * rpcexecuteupdate_1_svc();
#define RPCSTARTINSERTTRANSMDD 20
extern  u_short * rpcstartinserttransmdd_1();
extern  u_short * rpcstartinserttransmdd_1_svc();
#define RPCSTARTINSERTPERSMDD 21
extern  u_short * rpcstartinsertpersmdd_1();
extern  u_short * rpcstartinsertpersmdd_1_svc();
#define RPCINSERTTILE 22
extern  u_short * rpcinserttile_1();
extern  u_short * rpcinserttile_1_svc();
#define RPCENDINSERTMDD 23
extern  u_short * rpcendinsertmdd_1();
extern  u_short * rpcendinsertmdd_1_svc();
#define RPCINSERTMDD 24
extern  u_short * rpcinsertmdd_1();
extern  u_short * rpcinsertmdd_1_svc();
#define RPCGETCOLLBYNAME 25
extern  GetCollRes * rpcgetcollbyname_1();
extern  GetCollRes * rpcgetcollbyname_1_svc();
#define RPCGETCOLLBYOID 26
extern  GetCollRes * rpcgetcollbyoid_1();
extern  GetCollRes * rpcgetcollbyoid_1_svc();
#define RPCGETCOLLOIDSBYNAME 27
extern  GetCollOIdsRes * rpcgetcolloidsbyname_1();
extern  GetCollOIdsRes * rpcgetcolloidsbyname_1_svc();
#define RPCGETCOLLOIDSBYOID 28
extern  GetCollOIdsRes * rpcgetcolloidsbyoid_1();
extern  GetCollOIdsRes * rpcgetcolloidsbyoid_1_svc();
#define RPCINSERTCOLL 29
extern  u_short * rpcinsertcoll_1();
extern  u_short * rpcinsertcoll_1_svc();
#define RPCDELETECOLLBYNAME 30
extern  u_short * rpcdeletecollbyname_1();
extern  u_short * rpcdeletecollbyname_1_svc();
#define RPCDELETEOBJBYOID 31
extern  u_short * rpcdeleteobjbyoid_1();
extern  u_short * rpcdeleteobjbyoid_1_svc();
#define RPCREMOVEOBJFROMCOLL 32
extern  u_short * rpcremoveobjfromcoll_1();
extern  u_short * rpcremoveobjfromcoll_1_svc();
#define RPCGETNEWOID 33
extern  OIdRes * rpcgetnewoid_1();
extern  OIdRes * rpcgetnewoid_1_svc();
#define RPCGETOBJECTTYPE 34
extern  ObjectTypeRes * rpcgetobjecttype_1();
extern  ObjectTypeRes * rpcgetobjecttype_1_svc();
#define RPCGETTYPESTRUCTURE 35
extern  GetTypeStructureRes * rpcgettypestructure_1();
extern  GetTypeStructureRes * rpcgettypestructure_1_svc();
#define RPCGETNEXTELEMENT 36
extern  GetElementRes * rpcgetnextelement_1();
extern  GetElementRes * rpcgetnextelement_1_svc();
#define RPCGETSERVERENDIAN 37
extern  int * rpcgetserverendian_1();
extern  int * rpcgetserverendian_1_svc();
#define RPCSETSERVERTRANSFER 38
extern  u_short * rpcsetservertransfer_1();
extern  u_short * rpcsetservertransfer_1_svc();
#define RPCGETERRORINFO 39
extern  GetExtendedErrorInfo * rpcgeterrorinfo_1();
extern  GetExtendedErrorInfo * rpcgeterrorinfo_1_svc();
#define RPCSETSERVERSTORAGE 40
extern  u_short * rpcsetserverstorage_1();
extern  u_short * rpcsetserverstorage_1_svc();
extern int rpcif_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_confarray (XDR *, confarray*);
extern  bool_t xdr_RPCMarray (XDR *, RPCMarray*);
extern  bool_t xdr_RPCClientEntry (XDR *, RPCClientEntry*);
extern  bool_t xdr_RPCOIdEntry (XDR *, RPCOIdEntry*);
#ifdef __cplusplus
  extern "C" {bool_t xdr_OpenDBParams(); }
#else
  bool_t xdr_OpenDBParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OpenDBRes(); }
#else
  bool_t xdr_OpenDBRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_BeginTAParams(); }
#else
  bool_t xdr_BeginTAParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteQueryParams(); }
#else
  bool_t xdr_ExecuteQueryParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteQueryRes(); }
#else
  bool_t xdr_ExecuteQueryRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteUpdateRes(); }
#else
  bool_t xdr_ExecuteUpdateRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertCollParams(); }
#else
  bool_t xdr_InsertCollParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_NameSpecParams(); }
#else
  bool_t xdr_NameSpecParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OIdSpecParams(); }
#else
  bool_t xdr_OIdSpecParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_RemoveObjFromCollParams(); }
#else
  bool_t xdr_RemoveObjFromCollParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetCollRes(); }
#else
  bool_t xdr_GetCollRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetCollOIdsRes(); }
#else
  bool_t xdr_GetCollOIdsRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetMDDRes(); }
#else
  bool_t xdr_GetMDDRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTileRes(); }
#else
  bool_t xdr_GetTileRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OIdRes(); }
#else
  bool_t xdr_OIdRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ObjectTypeRes(); }
#else
  bool_t xdr_ObjectTypeRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertMDDParams(); }
#else
  bool_t xdr_InsertMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertTileParams(); }
#else
  bool_t xdr_InsertTileParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_EndInsertMDDParams(); }
#else
  bool_t xdr_EndInsertMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertTransMDDParams(); }
#else
  bool_t xdr_InsertTransMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertPersMDDParams(); }
#else
  bool_t xdr_InsertPersMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_NewOIdParams(); }
#else
  bool_t xdr_NewOIdParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ServerStatRes(); }
#else
  bool_t xdr_ServerStatRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ServerVersionRes(); }
#else
  bool_t xdr_ServerVersionRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTypeStructureParams(); }
#else
  bool_t xdr_GetTypeStructureParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTypeStructureRes(); }
#else
  bool_t xdr_GetTypeStructureRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetElementRes(); }
#else
  bool_t xdr_GetElementRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_SetServerTransferParams(); }
#else
  bool_t xdr_SetServerTransferParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetExtendedErrorInfo(); }
#else
  bool_t xdr_GetExtendedErrorInfo();
#endif

#else /* K&R C */
extern bool_t xdr_confarray ();
extern bool_t xdr_RPCMarray ();
extern bool_t xdr_RPCClientEntry ();
extern bool_t xdr_RPCOIdEntry ();
#ifdef __cplusplus
  extern "C" {bool_t xdr_OpenDBParams(); }
#else
  bool_t xdr_OpenDBParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OpenDBRes(); }
#else
  bool_t xdr_OpenDBRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_BeginTAParams(); }
#else
  bool_t xdr_BeginTAParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteQueryParams(); }
#else
  bool_t xdr_ExecuteQueryParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteQueryRes(); }
#else
  bool_t xdr_ExecuteQueryRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ExecuteUpdateRes(); }
#else
  bool_t xdr_ExecuteUpdateRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertCollParams(); }
#else
  bool_t xdr_InsertCollParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_NameSpecParams(); }
#else
  bool_t xdr_NameSpecParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OIdSpecParams(); }
#else
  bool_t xdr_OIdSpecParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_RemoveObjFromCollParams(); }
#else
  bool_t xdr_RemoveObjFromCollParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetCollRes(); }
#else
  bool_t xdr_GetCollRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetCollOIdsRes(); }
#else
  bool_t xdr_GetCollOIdsRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetMDDRes(); }
#else
  bool_t xdr_GetMDDRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTileRes(); }
#else
  bool_t xdr_GetTileRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_OIdRes(); }
#else
  bool_t xdr_OIdRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ObjectTypeRes(); }
#else
  bool_t xdr_ObjectTypeRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertMDDParams(); }
#else
  bool_t xdr_InsertMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertTileParams(); }
#else
  bool_t xdr_InsertTileParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_EndInsertMDDParams(); }
#else
  bool_t xdr_EndInsertMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertTransMDDParams(); }
#else
  bool_t xdr_InsertTransMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_InsertPersMDDParams(); }
#else
  bool_t xdr_InsertPersMDDParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_NewOIdParams(); }
#else
  bool_t xdr_NewOIdParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ServerStatRes(); }
#else
  bool_t xdr_ServerStatRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_ServerVersionRes(); }
#else
  bool_t xdr_ServerVersionRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTypeStructureParams(); }
#else
  bool_t xdr_GetTypeStructureParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetTypeStructureRes(); }
#else
  bool_t xdr_GetTypeStructureRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetElementRes(); }
#else
  bool_t xdr_GetElementRes();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_SetServerTransferParams(); }
#else
  bool_t xdr_SetServerTransferParams();
#endif
#ifdef __cplusplus
  extern "C" {bool_t xdr_GetExtendedErrorInfo(); }
#else
  bool_t xdr_GetExtendedErrorInfo();
#endif

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPCIF.H_H_RPCGEN */
