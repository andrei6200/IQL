/* 
 * File:   rqlkwlist.h
 * Author: andrei
 *
 * Created on June 5, 2010, 1:07 PM
 */

/* there is deliberately not an #ifndef RQLKWLIST_H here */

/*
 * List of keyword (name, token-value, category) entries.
 *
 * !!WARNING!!: This list must be sorted by ASCII name, because binary
 *		 search is used to locate entries.
 */





/* PostgreSQL keywords */
//RASQL_KW("abort", ABORT_P)
//RASQL_KW("absolute", ABSOLUTE_P)
//RASQL_KW("access", ACCESS)
//RASQL_KW("action", ACTION)
//RASQL_KW("add", ADD_P)
//RASQL_KW("admin", ADMIN)
//RASQL_KW("after", AFTER)
//RASQL_KW("aggregate", AGGREGATE)
//RASQL_KW("all", ALL)
//RASQL_KW("also", ALSO)
//RASQL_KW("alter", ALTER)
//RASQL_KW("always", ALWAYS)
//RASQL_KW("analyse", ANALYSE)		/* British spelling */
//RASQL_KW("analyze", ANALYZE)
//RASQL_KW("and", AND)
//RASQL_KW("any", ANY)
//RASQL_KW("array", ARRAY)
//RASQL_KW("as", AS)
//RASQL_KW("asc", ASC)
//RASQL_KW("assertion", ASSERTION)
//RASQL_KW("assignment", ASSIGNMENT)
//RASQL_KW("asymmetric", ASYMMETRIC)
//RASQL_KW("at", AT)
//RASQL_KW("authorization", AUTHORIZATION)
//RASQL_KW("backward", BACKWARD)
//RASQL_KW("before", BEFORE)
//RASQL_KW("begin", BEGIN_P)
//RASQL_KW("between", BETWEEN)
//RASQL_KW("bigint", BIGINT)
//RASQL_KW("binary", BINARY)
//RASQL_KW("bit", BIT)
//RASQL_KW("boolean", BOOLEAN_P)
//RASQL_KW("both", BOTH)
//RASQL_KW("by", BY)
//RASQL_KW("cache", CACHE)
//RASQL_KW("called", CALLED)
//RASQL_KW("cascade", CASCADE)
//RASQL_KW("cascaded", CASCADED)
//RASQL_KW("case", CASE)
//RASQL_KW("cast", CAST)
//RASQL_KW("catalog", CATALOG_P)
//RASQL_KW("chain", CHAIN)
//RASQL_KW("char", CHAR_P)
//RASQL_KW("character", CHARACTER)
//RASQL_KW("characteristics", CHARACTERISTICS)
//RASQL_KW("check", CHECK)
//RASQL_KW("checkpoint", CHECKPOINT)
//RASQL_KW("class", CLASS)
//RASQL_KW("close", CLOSE)
//RASQL_KW("cluster", CLUSTER)
//RASQL_KW("coalesce", COALESCE)
//RASQL_KW("collate", COLLATE)
//RASQL_KW("column", COLUMN)
//RASQL_KW("comment", COMMENT)
//RASQL_KW("commit", COMMIT)
//RASQL_KW("committed", COMMITTED)
//RASQL_KW("concurrently", CONCURRENTLY)
//RASQL_KW("configuration", CONFIGURATION)
//RASQL_KW("connection", CONNECTION)
//RASQL_KW("constraint", CONSTRAINT)
//RASQL_KW("constraints", CONSTRAINTS)
//RASQL_KW("content", CONTENT_P)
//RASQL_KW("continue", CONTINUE_P)
//RASQL_KW("conversion", CONVERSION_P)
//RASQL_KW("copy", COPY)
//RASQL_KW("cost", COST)
//RASQL_KW("create", CREATE)
//RASQL_KW("createdb", CREATEDB)
//RASQL_KW("createrole", CREATEROLE)
//RASQL_KW("createuser", CREATEUSER)
//RASQL_KW("cross", CROSS)
//RASQL_KW("csv", CSV)
//RASQL_KW("current", CURRENT_P)
//RASQL_KW("current_catalog", CURRENT_CATALOG)
//RASQL_KW("current_date", CURRENT_DATE)
//RASQL_KW("current_role", CURRENT_ROLE)
//RASQL_KW("current_schema", CURRENT_SCHEMA)
//RASQL_KW("current_time", CURRENT_TIME)
//RASQL_KW("current_timestamp", CURRENT_TIMESTAMP)
//RASQL_KW("current_user", CURRENT_USER)
//RASQL_KW("cursor", CURSOR)
//RASQL_KW("cycle", CYCLE)
//RASQL_KW("data", DATA_P)
//RASQL_KW("database", DATABASE)
//RASQL_KW("day", DAY_P)
//RASQL_KW("deallocate", DEALLOCATE)
//RASQL_KW("dec", DEC)
//RASQL_KW("decimal", DECIMAL_P)
//RASQL_KW("declare", DECLARE)
//RASQL_KW("default", DEFAULT)
//RASQL_KW("defaults", DEFAULTS)
//RASQL_KW("deferrable", DEFERRABLE)
//RASQL_KW("deferred", DEFERRED)
//RASQL_KW("definer", DEFINER)
//RASQL_KW("delete", DELETE_P)
//RASQL_KW("delimiter", DELIMITER)
//RASQL_KW("delimiters", DELIMITERS)
//RASQL_KW("desc", DESC)
//RASQL_KW("dictionary", DICTIONARY)
//RASQL_KW("disable", DISABLE_P)
//RASQL_KW("discard", DISCARD)
//RASQL_KW("distinct", DISTINCT)
//RASQL_KW("do", DO)
//RASQL_KW("document", DOCUMENT_P)
//RASQL_KW("domain", DOMAIN_P)
//RASQL_KW("double", DOUBLE_P)
//RASQL_KW("drop", DROP)
//RASQL_KW("each", EACH)
//RASQL_KW("else", ELSE)
//RASQL_KW("enable", ENABLE_P)
//RASQL_KW("encoding", ENCODING)
//RASQL_KW("encrypted", ENCRYPTED)
//RASQL_KW("end", END_P)
//RASQL_KW("enum", ENUM_P)
//RASQL_KW("escape", ESCAPE)
//RASQL_KW("except", EXCEPT)
//RASQL_KW("excluding", EXCLUDING)
//RASQL_KW("exclusive", EXCLUSIVE)
//RASQL_KW("execute", EXECUTE)
//RASQL_KW("exists", EXISTS)
//RASQL_KW("explain", EXPLAIN)
//RASQL_KW("external", EXTERNAL)
//RASQL_KW("extract", EXTRACT)
//RASQL_KW("false", FALSE_P)
//RASQL_KW("family", FAMILY)
//RASQL_KW("fetch", FETCH)
//RASQL_KW("first", FIRST_P)
//RASQL_KW("float", FLOAT_P)
//RASQL_KW("following", FOLLOWING)
//RASQL_KW("for", FOR)
//RASQL_KW("force", FORCE)
//RASQL_KW("foreign", FOREIGN)
//RASQL_KW("forward", FORWARD)
//RASQL_KW("freeze", FREEZE)
//RASQL_KW("from", FROM)
//RASQL_KW("full", FULL)
//RASQL_KW("function", FUNCTION)
//RASQL_KW("global", GLOBAL)
//RASQL_KW("grant", GRANT)
//RASQL_KW("granted", GRANTED)
//RASQL_KW("greatest", GREATEST)
//RASQL_KW("group", GROUP_P)
//RASQL_KW("handler", HANDLER)
//RASQL_KW("having", HAVING)
//RASQL_KW("header", HEADER_P)
//RASQL_KW("hold", HOLD)
//RASQL_KW("hour", HOUR_P)
//RASQL_KW("identity", IDENTITY_P)
//RASQL_KW("if", IF_P)
//RASQL_KW("ilike", ILIKE)
//RASQL_KW("immediate", IMMEDIATE)
//RASQL_KW("immutable", IMMUTABLE)
//RASQL_KW("implicit", IMPLICIT_P)
//RASQL_KW("in", IN_P)
//RASQL_KW("including", INCLUDING)
//RASQL_KW("increment", INCREMENT)
//RASQL_KW("index", INDEX)
//RASQL_KW("indexes", INDEXES)
//RASQL_KW("inherit", INHERIT)
//RASQL_KW("inherits", INHERITS)
//RASQL_KW("initially", INITIALLY)
//RASQL_KW("inner", INNER_P)
//RASQL_KW("inout", INOUT)
//RASQL_KW("input", INPUT_P)
//RASQL_KW("insensitive", INSENSITIVE)
//RASQL_KW("insert", INSERT)
//RASQL_KW("instead", INSTEAD)
//RASQL_KW("int", INT_P)
//RASQL_KW("integer", INTEGER)
//RASQL_KW("intersect", INTERSECT)
//RASQL_KW("interval", INTERVAL)
//RASQL_KW("into", INTO)
//RASQL_KW("invoker", INVOKER)
//RASQL_KW("is", IS)
//RASQL_KW("isnull", ISNULL)
//RASQL_KW("isolation", ISOLATION)
//RASQL_KW("join", JOIN)
//RASQL_KW("key", KEY)
//RASQL_KW("lancompiler", LANCOMPILER)
//RASQL_KW("language", LANGUAGE)
//RASQL_KW("large", LARGE_P)
//RASQL_KW("last", LAST_P)
//RASQL_KW("lc_collate", LC_COLLATE_P)
//RASQL_KW("lc_ctype", LC_CTYPE_P)
//RASQL_KW("leading", LEADING)
//RASQL_KW("least", LEAST)
//RASQL_KW("left", LEFT)
//RASQL_KW("level", LEVEL)
//RASQL_KW("like", LIKE)
//RASQL_KW("limit", LIMIT)
//RASQL_KW("listen", LISTEN)
//RASQL_KW("load", LOAD)
//RASQL_KW("local", LOCAL)
//RASQL_KW("localtime", LOCALTIME)
//RASQL_KW("localtimestamp", LOCALTIMESTAMP)
//RASQL_KW("location", LOCATION)
//RASQL_KW("lock", LOCK_P)
//RASQL_KW("login", LOGIN_P)
//RASQL_KW("mapping", MAPPING)
//RASQL_KW("match", MATCH)
//RASQL_KW("maxvalue", MAXVALUE)
//RASQL_KW("minute", MINUTE_P)
//RASQL_KW("minvalue", MINVALUE)
//RASQL_KW("mode", MODE)
//RASQL_KW("month", MONTH_P)
//RASQL_KW("move", MOVE)
//RASQL_KW("name", NAME_P)
//RASQL_KW("names", NAMES)
//RASQL_KW("national", NATIONAL)
//RASQL_KW("natural", NATURAL)
//RASQL_KW("nchar", NCHAR)
//RASQL_KW("new", NEW)
//RASQL_KW("next", NEXT)
//RASQL_KW("no", NO)
//RASQL_KW("nocreatedb", NOCREATEDB)
//RASQL_KW("nocreaterole", NOCREATEROLE)
//RASQL_KW("nocreateuser", NOCREATEUSER)
//RASQL_KW("noinherit", NOINHERIT)
//RASQL_KW("nologin", NOLOGIN_P)
//RASQL_KW("none", NONE)
//RASQL_KW("nosuperuser", NOSUPERUSER)
//RASQL_KW("not", NOT)
//RASQL_KW("nothing", NOTHING)
//RASQL_KW("notify", NOTIFY)
//RASQL_KW("notnull", NOTNULL)
//RASQL_KW("nowait", NOWAIT)
//RASQL_KW("null", NULL_P)
//RASQL_KW("nullif", NULLIF)
//RASQL_KW("nulls", NULLS_P)
//RASQL_KW("numeric", NUMERIC)
//RASQL_KW("object", OBJECT_P)
//RASQL_KW("of", OF)
//RASQL_KW("off", OFF)
//RASQL_KW("offset", OFFSET)
//RASQL_KW("oids", OIDS)
//RASQL_KW("old", OLD)
//RASQL_KW("on", ON)
//RASQL_KW("only", ONLY)
//RASQL_KW("operator", OPERATOR)
//RASQL_KW("option", OPTION)
//RASQL_KW("options", OPTIONS)
//RASQL_KW("or", OR)
//RASQL_KW("order", ORDER)
//RASQL_KW("out", OUT_P)
//RASQL_KW("outer", OUTER_P)
//RASQL_KW("over", OVER)
//RASQL_KW("overlaps", OVERLAPS)
//RASQL_KW("overlay", OVERLAY)
//RASQL_KW("owned", OWNED)
//RASQL_KW("owner", OWNER)
//RASQL_KW("parser", PARSER)
//RASQL_KW("partial", PARTIAL)
//RASQL_KW("partition", PARTITION)
//RASQL_KW("password", PASSWORD)
//RASQL_KW("placing", PLACING)
//RASQL_KW("plans", PLANS)
//RASQL_KW("position", POSITION)
//RASQL_KW("preceding", PRECEDING)
//RASQL_KW("precision", PRECISION)
//RASQL_KW("prepare", PREPARE)
//RASQL_KW("prepared", PREPARED)
//RASQL_KW("preserve", PRESERVE)
//RASQL_KW("primary", PRIMARY)
//RASQL_KW("prior", PRIOR)
//RASQL_KW("privileges", PRIVILEGES)
//RASQL_KW("procedural", PROCEDURAL)
//RASQL_KW("procedure", PROCEDURE)
//RASQL_KW("quote", QUOTE)
//RASQL_KW("range", RANGE)
//RASQL_KW("read", READ)
//RASQL_KW("real", REAL)
//RASQL_KW("reassign", REASSIGN)
//RASQL_KW("recheck", RECHECK)
//RASQL_KW("recursive", RECURSIVE)
//RASQL_KW("references", REFERENCES)
//RASQL_KW("reindex", REINDEX)
//RASQL_KW("relative", RELATIVE_P)
//RASQL_KW("release", RELEASE)
//RASQL_KW("rename", RENAME)
//RASQL_KW("repeatable", REPEATABLE)
//RASQL_KW("replace", REPLACE)
//RASQL_KW("replica", REPLICA)
//RASQL_KW("reset", RESET)
//RASQL_KW("restart", RESTART)
//RASQL_KW("restrict", RESTRICT)
//RASQL_KW("returning", RETURNING)
//RASQL_KW("returns", RETURNS)
//RASQL_KW("revoke", REVOKE)
//RASQL_KW("right", RIGHT)
//RASQL_KW("role", ROLE)
//RASQL_KW("rollback", ROLLBACK)
//RASQL_KW("row", ROW)
//RASQL_KW("rows", ROWS)
//RASQL_KW("rule", RULE)
//RASQL_KW("savepoint", SAVEPOINT)
//RASQL_KW("schema", SCHEMA)
//RASQL_KW("scroll", SCROLL)
//RASQL_KW("search", SEARCH)
//RASQL_KW("second", SECOND_P)
//RASQL_KW("security", SECURITY)
//RASQL_KW("select", SELECT)
//RASQL_KW("sequence", SEQUENCE)
//RASQL_KW("serializable", SERIALIZABLE)
//RASQL_KW("server", SERVER)
//RASQL_KW("session", SESSION)
//RASQL_KW("session_user", SESSION_USER)
//RASQL_KW("set", SET)
//RASQL_KW("setof", SETOF)
//RASQL_KW("share", SHARE)
//RASQL_KW("show", SHOW)
//RASQL_KW("similar", SIMILAR)
//RASQL_KW("simple", SIMPLE)
//RASQL_KW("smallint", SMALLINT)
//RASQL_KW("some", SOME)
//RASQL_KW("stable", STABLE)
//RASQL_KW("standalone", STANDALONE_P)
//RASQL_KW("start", START)
//RASQL_KW("statement", STATEMENT)
//RASQL_KW("statistics", STATISTICS)
//RASQL_KW("stdin", STDIN)
//RASQL_KW("stdout", STDOUT)
//RASQL_KW("storage", STORAGE)
//RASQL_KW("strict", STRICT_P)
//RASQL_KW("strip", STRIP_P)
//RASQL_KW("substring", SUBSTRING)
//RASQL_KW("superuser", SUPERUSER_P)
//RASQL_KW("symmetric", SYMMETRIC)
//RASQL_KW("sysid", SYSID)
//RASQL_KW("system", SYSTEM_P)
//RASQL_KW("table", TABLE)
//RASQL_KW("tablespace", TABLESPACE)
//RASQL_KW("temp", TEMP)
//RASQL_KW("template", TEMPLATE)
//RASQL_KW("temporary", TEMPORARY)
//RASQL_KW("text", TEXT_P)
//RASQL_KW("then", THEN)
//RASQL_KW("time", TIME)
//RASQL_KW("timestamp", TIMESTAMP)
//RASQL_KW("to", TO)
//RASQL_KW("trailing", TRAILING)
//RASQL_KW("transaction", TRANSACTION)
//RASQL_KW("treat", TREAT)
//RASQL_KW("trigger", TRIGGER)
//RASQL_KW("trim", TRIM)
//RASQL_KW("true", TRUE_P)
//RASQL_KW("truncate", TRUNCATE)
//RASQL_KW("trusted", TRUSTED)
//RASQL_KW("type", TYPE_P)
//RASQL_KW("unbounded", UNBOUNDED)
//RASQL_KW("uncommitted", UNCOMMITTED)
//RASQL_KW("unencrypted", UNENCRYPTED)
//RASQL_KW("union", UNION)
//RASQL_KW("unique", UNIQUE)
//RASQL_KW("unknown", UNKNOWN)
//RASQL_KW("unlisten", UNLISTEN)
//RASQL_KW("until", UNTIL)
//RASQL_KW("update", UPDATE)
//RASQL_KW("user", USER)
//RASQL_KW("using", USING)
//RASQL_KW("vacuum", VACUUM)
//RASQL_KW("valid", VALID)
//RASQL_KW("validator", VALIDATOR)
//RASQL_KW("value", VALUE_P)
//RASQL_KW("values", VALUES)
//RASQL_KW("varchar", VARCHAR)
//RASQL_KW("variadic", VARIADIC)
//RASQL_KW("varying", VARYING)
//RASQL_KW("verbose", VERBOSE)
//RASQL_KW("version", VERSION_P)
//RASQL_KW("view", VIEW)
//RASQL_KW("volatile", VOLATILE)
//RASQL_KW("when", WHEN)
//RASQL_KW("where", WHERE)
//RASQL_KW("whitespace", WHITESPACE_P)
//RASQL_KW("window", WINDOW)
//RASQL_KW("with", WITH)
//RASQL_KW("without", WITHOUT)
//RASQL_KW("work", WORK)
//RASQL_KW("wrapper", WRAPPER)
//RASQL_KW("write", WRITE)
//RASQL_KW("xml", XML_P)
//RASQL_KW("xmlattributes", XMLATTRIBUTES)
//RASQL_KW("xmlconcat", XMLCONCAT)
//RASQL_KW("xmlelement", XMLELEMENT)
//RASQL_KW("xmlforest", XMLFOREST)
//RASQL_KW("xmlparse", XMLPARSE)
//RASQL_KW("xmlpi", XMLPI)
//RASQL_KW("xmlroot", XMLROOT)
//RASQL_KW("xmlserialize", XMLSERIALIZE)
//RASQL_KW("year", YEAR_P)
//RASQL_KW("yes", YES_P)
//RASQL_KW("zone", ZONE)


/* RASQL KEYWORDS */
RASQL_KW("abs", ABS)
RASQL_KW("add", ADD)
RASQL_KW("add_cell", ADDCELLS)
RASQL_KW("add_cells", ADDCELLS)
RASQL_KW("a_index", A_INDEX)
RASQL_KW("aligned", ALIGNED)
RASQL_KW("all_cell", RQLALL)
RASQL_KW("all_cells", RQLALL)
//RASQL_KW("alter", ALTER)
//RASQL_KW("and", AND)
RASQL_KW("arccos", ARCCOS)
RASQL_KW("arcsin", ARCSIN)
RASQL_KW("arctan", ARCTAN)
RASQL_KW("area", AREA)
//RASQL_KW("as", AS)
RASQL_KW("assign", ASSIGN)
//RASQL_KW("at", AT)
RASQL_KW("auto", AUTO)
RASQL_KW("avg_cell", AVGCELLS)
RASQL_KW("avg_cells", AVGCELLS)
//RASQL_KW("bit", BIT)
RASQL_KW("bmp", BMP)
RASQL_KW("bool", TBOOL)
RASQL_KW("border", BORDER)
//RASQL_KW("by", BY)
RASQL_KW("char", TCHAR)
RASQL_KW("collection", COLLECTION)
RASQL_KW("complex", COMPLEX)
RASQL_KW("condense", CONDENSE)
RASQL_KW("cos", COS)
RASQL_KW("cosh", COSH)
RASQL_KW("count_cell", COUNTCELLS)
RASQL_KW("count_cells", COUNTCELLS)
//RASQL_KW("create", CREATE)
//RASQL_KW("csv", CSV)
RASQL_KW("decomp", DECOMP)
RASQL_KW("delete", DELETE)
RASQL_KW("dem", DEM)
RASQL_KW("dimension", DIMENSION)
RASQL_KW("d_index", D_INDEX)
RASQL_KW("directional", DIRECTIONAL)
RASQL_KW("double", TDOUBLE)
//RASQL_KW("drop", DROP)
RASQL_KW("exp", EXP)
RASQL_KW("extend", EXTEND)
RASQL_KW("fastscale", FASTSCALE)
RASQL_KW("float", TFLOAT)
//RASQL_KW("from", FROM)
RASQL_KW("hdf", HDF)
RASQL_KW("hi", HI)
RASQL_KW("im", IM)
//RASQL_KW("index", INDEX)
RASQL_KW("in", IN)
//RASQL_KW("insert", INSERT)
RASQL_KW("interest", INTEREST)
//RASQL_KW("into", INTO)
RASQL_KW("inv_bmp", INV_BMP)
RASQL_KW("inv_csv", INV_CSV)
RASQL_KW("inv_dem", INV_DEM)
RASQL_KW("inv_hdf", INV_HDF)
RASQL_KW("inv_jpeg", INV_JPEG)
RASQL_KW("inv_png", INV_PNG)
RASQL_KW("inv_tiff", INV_TIFF)
RASQL_KW("inv_tor", INV_TOR)
RASQL_KW("inv_vff", INV_VFF)
//RASQL_KW("is", IS)
RASQL_KW("it_index", IT_INDEX)
RASQL_KW("jpeg", JPEG)
RASQL_KW("list", LIST)
RASQL_KW("ln", LN)
RASQL_KW("log", RQLLOG)
RASQL_KW("lo", LO)
RASQL_KW("long", TLONG)
RASQL_KW("marray", MARRAY)
RASQL_KW("max_cell", MAXCELLS)
RASQL_KW("max_cells", MAXCELLS)
RASQL_KW("members", MEMBERS)
RASQL_KW("min_cell", MINCELLS)
RASQL_KW("min_cells", MINCELLS)
//RASQL_KW("not", NOT)
RASQL_KW("octet", TOCTET)
//RASQL_KW("of", OF)
RASQL_KW("oid", OID)
//RASQL_KW("or", OR)
//RASQL_KW("overlay", OVERLAY)
//RASQL_KW("over", OVER)
RASQL_KW("png", PNG)
RASQL_KW("project", PROJECT)
RASQL_KW("rc_index", RC_INDEX)
RASQL_KW("rd_index", RD_INDEX)
RASQL_KW("regular", REGULAR)
RASQL_KW("re", RE)
//RASQL_KW("restrict", RESTRICT)
RASQL_KW("rpt_index", RPT_INDEX)
RASQL_KW("rrpt_index", RRPT_INDEX)
RASQL_KW("scale", SCALE)
RASQL_KW("sdom", SDOM)
//RASQL_KW("select", SELECT)
//RASQL_KW("set", SET)
RASQL_KW("shift", SHIFT)
RASQL_KW("short", TSHORT)
RASQL_KW("sinh", SINH)
RASQL_KW("sin", SIN)
RASQL_KW("size", SIZE)
RASQL_KW("some_cell", RQLSOME)
RASQL_KW("some_cells", RQLSOME)
RASQL_KW("sqrt", SQRT)
RASQL_KW("statistic", STATISTIC)
RASQL_KW("struct", STRCT)
RASQL_KW("subtiling", SUBTILING)
RASQL_KW("tanh", TANH)
RASQL_KW("tan", TAN)
RASQL_KW("tc_index", TC_INDEX)
RASQL_KW("threshold", THRESHOLD)
RASQL_KW("tiff", TIFF)
RASQL_KW("tile", TILE)
RASQL_KW("tiling", TILING)
RASQL_KW("tor", TOR)
//RASQL_KW("to", TO)
RASQL_KW("ulong", TULONG)
RASQL_KW("unsigned", TUNSIG)
//RASQL_KW("update", UPDATE)
RASQL_KW("ushort", TUSHORT)
//RASQL_KW("using", USING)
//RASQL_KW("values", VALUES)
RASQL_KW("vff", VFF)
//RASQL_KW("where", WHERE)
//RASQL_KW("with", WITH)
RASQL_KW("xor", XOR)


        
/* The below operators are going to be handled in the lexer file directly. */
//","                                      { SETTOKEN( COMMA, commandToken, COMMA ) }
//"."                                      { SETTOKEN( DOT, commandToken, DOT ) }
//
//"+"                                      { SETTOKEN( PLUS, commandToken, PLUS ) }
//"-"                                      { SETTOKEN( MINUS, commandToken, MINUS ) }
//"*"                                      { SETTOKEN( MULT, commandToken, MULT ) }
//"/"                                      { SETTOKEN( DIV, commandToken, DIV ) }
//"="                                      { SETTOKEN( EQUAL, commandToken, EQUAL ) }
//"<"                                      { SETTOKEN( LESS, commandToken, LESS ) }
//">"                                      { SETTOKEN( GREATER, commandToken, GREATER ) }
//"<="                                     { SETTOKEN( LESSEQUAL, commandToken, LESSEQUAL ) }
//">="                                     { SETTOKEN( GREATEREQUAL, commandToken, GREATEREQUAL ) }
//"<>"                                     { SETTOKEN( NOTEQUAL, commandToken, NOTEQUAL ) }
//"!="                                     { SETTOKEN( NOTEQUAL, commandToken, NOTEQUAL ) }
//":"                                      { SETTOKEN( COLON, commandToken, COLON ) }
//";"                                      { SETTOKEN( SEMICOLON, commandToken, SEMICOLON ) }
//"["                                      { SETTOKEN( LEPAR, commandToken, LEPAR ) }
//"]"                                      { SETTOKEN( REPAR, commandToken, REPAR ) }
//"("                                      { SETTOKEN( LRPAR, commandToken, LRPAR ) }
//")"                                      { SETTOKEN( RRPAR, commandToken, RRPAR ) }
//"{"                                      { SETTOKEN( LCPAR, commandToken, LCPAR ) }
//"}"                                      { SETTOKEN( RCPAR, commandToken, RCPAR ) }