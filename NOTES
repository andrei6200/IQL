- Make lists of restrictions for grammar (take from thesis)
	- Write tests for all of them


QUESTIONS
- DataSourceRef nodes should not store data in a Table, right?
- all other nodes store data in a DS


TODO: 

- integrate PostGIS grammar
	- read PostGIS functions at init-time
	- search them in the grammar parser

- perform serious tests

- allow WHERE clauses

- bug request for Rasdaman docs
    - query examples for oid(...) == <system|db|localOid>  are not correct
    - one has to use quotes !
        - oid(...) == < "system|db|localOid" >

- bug request in Rasdaman
    - MDDType marray<char, 2> with domain [1:100, 1:100] is NOT compatible with
      MDDTYpe marray<char, 2> with domain [*:*, *:*]
    - For the moment, HQL does not use unbounded domains for the newly created collections.
         - this a temporary workaround

- extend the query tree classes to handle the HQL grammar

- add the GROUP BY and HAVING clauses to the gramamr
- complex combinations of SQL + RaSQL


DONE
- simple RaSQL queries
- Ambiguous queries
    - can be matched by both RaSQL and SQL
    - need to un-ambiguate based on table names

- simple mixed combinations of SQL + RaSQL
    - always execute one SQL and one RaSQL query
    - merge the results
        - cartesian product / join :-s
- do not exit the hql client once a syntax error has been found
    - move the "yyparse()" into a while loop.
- implement data sources architecture
    - modules, as described in architecture document
- HqlTable: each row should have an internal ID
	- helps with sorting