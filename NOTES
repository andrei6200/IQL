- Check if PostgreSQL can properly parse and understand "<=" or ">="
    - Had 2 operators "<" and "=", and not the combined one

- Make lists of restrictions for grammar (take from thesis)
	- Write tests for all of them



TODO: 

- integrate PostGIS grammar
- perform serious tests

- allow WHERE clauses


- extend the query tree classes to handle the HQL grammar

- HqlTable: each row should have an internal ID
	- helps with sorting


- change tree structure.
    - data sources register with the tree, globally
    - any node operation related to a HQL QT node or to a data source node

- implement data sources architecture
    - modules, as described in architecture document

- add the GROUP BY and HAVING clauses to the gramamr
- complex combinations of SQL + RaSQL


- do not exit the hql client once a syntax error has been found
    - move the "yyparse()" into a while loop.

DONE
- simple RaSQL queries
- Ambiguous queries
    - can be matched by both RaSQL and SQL
    - need to un-ambiguate based on table names

- simple mixed combinations of SQL + RaSQL
    - always execute one SQL and one RaSQL query
    - merge the results
        - cartesian product / join :-s
